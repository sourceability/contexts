name: Test

on:
    push:
    pull_request:
        types: [opened, synchronize, edited, reopened]

jobs:
    test:
        name: PHP ${{ matrix.php-version }} + Symfony ${{ matrix.symfony-version }}
        runs-on: ubuntu-20.04
        timeout-minutes: 30
        continue-on-error: false
        strategy:
            fail-fast: true
            matrix:
                php-version:
                    - '7.4'
                    - '8.1'
                symfony-version:
                    - '5.4.*'
                    - '6.0.*'
                exclude:
                    - php-version: '7.4'
                      symfony-version: '6.0.*'
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  coverage: none
                  ini-values: "memory_limit=-1"
                  php-version: ${{ matrix.php-version }}
                  tools: composer:v2
              env:
                  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Get composer cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache dependencies
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Start servers
              run: docker-compose up -d

            - name: Validate composer.json
              run: composer validate --no-check-lock

            - name: Configure Symfony version
              run: composer require --no-update "symfony/config:${{ matrix.symfony-version }}" "symfony/dependency-injection:${{ matrix.symfony-version }}"

            - name: Install dependencies
              run: composer install --prefer-dist --no-progress

            - name: Atoum
              run: bin/atoum

            - name: Behat
              run: bin/behat -fprogress --tags="~@user" --no-interaction

            - name: Stop servers
              run: docker-compose down --volumes
              if: always() || failure()
